name: Release Management

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  GO_VERSION: '1.22'
  NODE_VERSION: '18'

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dagger CLI
        run: go install dagger.io/dagger@v0.9.3

      - name: Generate all translations
        run: make generate-translations

      - name: Create Release Notes
        run: |
          echo "# OWASP Top 10 for AI Agents" > RELEASE_NOTES.md
          echo "## Changes in this release" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          git log $(git describe --tags --abbrev=0 2>/dev/null || echo HEAD^)..HEAD --pretty=format:"* %s" >> RELEASE_NOTES.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          name: Release ${{ github.event.inputs.version || github.ref_name }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          files: |
            generated/*.pdf
            v1/translations/*/*.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-version:
    name: Update Version Files
    runs-on: ubuntu-latest
    needs: prepare-release
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update version in files
        run: |
          VERSION="${{ github.event.inputs.version }}"
          # Update version in metadata files
          find v1/translations -name "metadata.yaml" -type f -exec sed -i "s/^version: .*/version: \"${VERSION#v}\"/" {} \;
          
          # Update version in package files
          if [ -f "package.json" ]; then
            sed -i "s/\"version\": \".*\"/\"version\": \"${VERSION#v}\"/" package.json
          fi

      - name: Commit version updates
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update version to ${{ github.event.inputs.version }}"
          branch: main
          file_pattern: |
            v1/translations/**/metadata.yaml
            package.json

  create-tag:
    name: Create Tag
    runs-on: ubuntu-latest
    needs: update-version
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Create and push tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}
