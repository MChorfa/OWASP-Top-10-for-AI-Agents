name: Validate Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  validate:
    name: Validate Changes
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate commit messages
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
            i18n
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            starts with a lowercase character.

      - name: Lint YAML files
        run: |
          sudo apt-get update
          sudo apt-get install -y yamllint
          yamllint .

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jsonschema

      - name: Validate glossary
        run: |
          python scripts/manage_glossary.py --validate
          python scripts/manage_glossary.py --export-md

      - name: Check glossary markdown files
        run: |
          for lang in en ar fr; do
            if [ ! -f "v1/glossary/markdown/glossary_${lang}.md" ]; then
              echo "Error: Missing glossary_${lang}.md"
              exit 1
            fi
          done

      - name: Check file structure
        run: |
          # Check translations directory structure
          for lang_dir in v1/translations/*/; do
            if [ -d "$lang_dir" ]; then
              lang=$(basename "$lang_dir")
              
              # Check required files
              if [ ! -f "${lang_dir}metadata.yaml" ]; then
                echo "Error: Missing metadata.yaml in $lang_dir"
                exit 1
              fi
              
              if [ ! -f "${lang_dir}${lang}.md" ]; then
                echo "Error: Missing ${lang}.md in $lang_dir"
                exit 1
              fi
            fi
          done

      - name: Validate metadata files
        run: |
          for metadata in v1/translations/*/metadata.yaml; do
            if [ -f "$metadata" ]; then
              # Check required fields
              if ! grep -q "^language:" "$metadata" || \
                 ! grep -q "^  name:" "$metadata" || \
                 ! grep -q "^  code:" "$metadata" || \
                 ! grep -q "^  direction:" "$metadata" || \
                 ! grep -q "^version:" "$metadata"; then
                echo "Error: Missing required fields in $metadata"
                exit 1
              fi
            fi
          done

      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Dagger CLI
        run: cd /usr/local && { curl -L https://dl.dagger.io/dagger/install.sh | sh; cd -; }

      - name: Validate Glossary
        run: |
          cd .dagger
          go run . validate-glossary

      - name: Generate Glossary Markdown
        run: |
          cd .dagger
          go run . export-glossary-markdown

      - name: Validate Translations
        run: |
          cd .dagger
          go run . validate-translations

      - name: Semantic PR Title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Conventional Commits
        uses: webiny/action-conventional-commits@v1.1.0
