name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.22'
  NODE_VERSION: '18'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Dagger
        run: curl -L https://dl.dagger.io/dagger/install.sh | sh

      - name: Validate
        run: make check-requirements

      - name: Build
        run: make build

      - name: Test
        run: make test

      - name: Security Scan
        uses: github/codeql-action/analyze@v2

  content-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check Markdown Links
        uses: gaurav-nelson/github-action-markdown-link-check@v1

      - name: Vale Linting
        uses: errata-ai/vale-action@reviewdog
        with:
          files: docs/

      - name: Check Translations
        run: make validate-translations

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Run gosec
        uses: securego/gosec@master
        with:
          args: './...'

  metrics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run metrics collection
        run: make metrics

      - name: Upload metrics
        uses: actions/upload-artifact@v3
        with:
          name: metrics-report
          path: metrics/

  release:
    needs: validate
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Release
        run: make release

  translate-and-convert:
    runs-on: ubuntu-latest
    needs: [validate]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install googletrans==3.1.0a0
          pip install mdpdf
          sudo apt-get install pandoc texlive-xetex

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Node dependencies
        run: |
          npm install @google-cloud/translate
          npm install markdown-pdf

      - name: Auto-translate content
        run: |
          python scripts/translate.py \
            --source v1/docs/en \
            --target v1/translations \
            --languages "es,fr,de,zh,ja"
        env:
          GOOGLE_CLOUD_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

      - name: Generate PDFs
        run: |
          mkdir -p generated
          find v1/translations -name "*.md" -type f -exec sh -c '
            OUTPUT_PDF="generated/$(basename {} .md)_$(dirname {} | xargs basename).pdf"
            pandoc {} \
              -f markdown \
              -t pdf \
              --pdf-engine=xelatex \
              -o "$OUTPUT_PDF"
          ' \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: translations-and-pdfs
          path: |
            v1/translations/**/*.md
            generated/*.pdf
          retention-days: 5
